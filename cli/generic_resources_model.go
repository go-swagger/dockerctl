// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/swag"
	"github.com/go-swagger/dockerctl/models"

	"github.com/spf13/cobra"
)

// Schema cli for []*GenericResourcesItems0

// Name: [GenericResources], Type:[[]*GenericResourcesItems0], register and retrieve functions are not rendered by go-swagger cli

// Extra schema cli for GenericResourcesItems0

// register flags to command
func registerModelGenericResourcesItems0Flags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerGenericResourcesItems0DiscreteResourceSpec(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerGenericResourcesItems0NamedResourceSpec(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerGenericResourcesItems0DiscreteResourceSpec(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var discreteResourceSpecFlagName string
	if cmdPrefix == "" {
		discreteResourceSpecFlagName = "DiscreteResourceSpec"
	} else {
		discreteResourceSpecFlagName = fmt.Sprintf("%v.DiscreteResourceSpec", cmdPrefix)
	}

	if err := registerModelGenericResourcesItems0DiscreteResourceSpecFlags(depth+1, discreteResourceSpecFlagName, cmd); err != nil {
		return err
	}

	return nil
}

func registerGenericResourcesItems0NamedResourceSpec(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var namedResourceSpecFlagName string
	if cmdPrefix == "" {
		namedResourceSpecFlagName = "NamedResourceSpec"
	} else {
		namedResourceSpecFlagName = fmt.Sprintf("%v.NamedResourceSpec", cmdPrefix)
	}

	if err := registerModelGenericResourcesItems0NamedResourceSpecFlags(depth+1, namedResourceSpecFlagName, cmd); err != nil {
		return err
	}

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelGenericResourcesItems0Flags(depth int, m *models.GenericResourcesItems0, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, discreteResourceSpecAdded := retrieveGenericResourcesItems0DiscreteResourceSpecFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || discreteResourceSpecAdded

	err, namedResourceSpecAdded := retrieveGenericResourcesItems0NamedResourceSpecFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || namedResourceSpecAdded

	return nil, retAdded
}

func retrieveGenericResourcesItems0DiscreteResourceSpecFlags(depth int, m *models.GenericResourcesItems0, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	discreteResourceSpecFlagName := fmt.Sprintf("%v.DiscreteResourceSpec", cmdPrefix)
	if cmd.Flags().Changed(discreteResourceSpecFlagName) {
		// info: complex object DiscreteResourceSpec GenericResourcesItems0DiscreteResourceSpec is retrieved outside this Changed() block
	}
	discreteResourceSpecFlagValue := m.DiscreteResourceSpec
	if swag.IsZero(discreteResourceSpecFlagValue) {
		discreteResourceSpecFlagValue = &models.GenericResourcesItems0DiscreteResourceSpec{}
	}

	err, discreteResourceSpecAdded := retrieveModelGenericResourcesItems0DiscreteResourceSpecFlags(depth+1, discreteResourceSpecFlagValue, discreteResourceSpecFlagName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || discreteResourceSpecAdded
	if discreteResourceSpecAdded {
		m.DiscreteResourceSpec = discreteResourceSpecFlagValue
	}

	return nil, retAdded
}

func retrieveGenericResourcesItems0NamedResourceSpecFlags(depth int, m *models.GenericResourcesItems0, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	namedResourceSpecFlagName := fmt.Sprintf("%v.NamedResourceSpec", cmdPrefix)
	if cmd.Flags().Changed(namedResourceSpecFlagName) {
		// info: complex object NamedResourceSpec GenericResourcesItems0NamedResourceSpec is retrieved outside this Changed() block
	}
	namedResourceSpecFlagValue := m.NamedResourceSpec
	if swag.IsZero(namedResourceSpecFlagValue) {
		namedResourceSpecFlagValue = &models.GenericResourcesItems0NamedResourceSpec{}
	}

	err, namedResourceSpecAdded := retrieveModelGenericResourcesItems0NamedResourceSpecFlags(depth+1, namedResourceSpecFlagValue, namedResourceSpecFlagName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || namedResourceSpecAdded
	if namedResourceSpecAdded {
		m.NamedResourceSpec = namedResourceSpecFlagValue
	}

	return nil, retAdded
}

// Extra schema cli for GenericResourcesItems0DiscreteResourceSpec

// register flags to command
func registerModelGenericResourcesItems0DiscreteResourceSpecFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerGenericResourcesItems0DiscreteResourceSpecKind(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerGenericResourcesItems0DiscreteResourceSpecValue(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerGenericResourcesItems0DiscreteResourceSpecKind(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	kindDescription := ``

	var kindFlagName string
	if cmdPrefix == "" {
		kindFlagName = "Kind"
	} else {
		kindFlagName = fmt.Sprintf("%v.Kind", cmdPrefix)
	}

	var kindFlagDefault string

	_ = cmd.PersistentFlags().String(kindFlagName, kindFlagDefault, kindDescription)

	return nil
}

func registerGenericResourcesItems0DiscreteResourceSpecValue(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	valueDescription := ``

	var valueFlagName string
	if cmdPrefix == "" {
		valueFlagName = "Value"
	} else {
		valueFlagName = fmt.Sprintf("%v.Value", cmdPrefix)
	}

	var valueFlagDefault int64

	_ = cmd.PersistentFlags().Int64(valueFlagName, valueFlagDefault, valueDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelGenericResourcesItems0DiscreteResourceSpecFlags(depth int, m *models.GenericResourcesItems0DiscreteResourceSpec, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, kindAdded := retrieveGenericResourcesItems0DiscreteResourceSpecKindFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || kindAdded

	err, valueAdded := retrieveGenericResourcesItems0DiscreteResourceSpecValueFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || valueAdded

	return nil, retAdded
}

func retrieveGenericResourcesItems0DiscreteResourceSpecKindFlags(depth int, m *models.GenericResourcesItems0DiscreteResourceSpec, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	kindFlagName := fmt.Sprintf("%v.Kind", cmdPrefix)
	if cmd.Flags().Changed(kindFlagName) {

		var kindFlagName string
		if cmdPrefix == "" {
			kindFlagName = "Kind"
		} else {
			kindFlagName = fmt.Sprintf("%v.Kind", cmdPrefix)
		}

		kindFlagValue, err := cmd.Flags().GetString(kindFlagName)
		if err != nil {
			return err, false
		}
		m.Kind = kindFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveGenericResourcesItems0DiscreteResourceSpecValueFlags(depth int, m *models.GenericResourcesItems0DiscreteResourceSpec, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	valueFlagName := fmt.Sprintf("%v.Value", cmdPrefix)
	if cmd.Flags().Changed(valueFlagName) {

		var valueFlagName string
		if cmdPrefix == "" {
			valueFlagName = "Value"
		} else {
			valueFlagName = fmt.Sprintf("%v.Value", cmdPrefix)
		}

		valueFlagValue, err := cmd.Flags().GetInt64(valueFlagName)
		if err != nil {
			return err, false
		}
		m.Value = valueFlagValue

		retAdded = true
	}

	return nil, retAdded
}

// Extra schema cli for GenericResourcesItems0NamedResourceSpec

// register flags to command
func registerModelGenericResourcesItems0NamedResourceSpecFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerGenericResourcesItems0NamedResourceSpecKind(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerGenericResourcesItems0NamedResourceSpecValue(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerGenericResourcesItems0NamedResourceSpecKind(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	kindDescription := ``

	var kindFlagName string
	if cmdPrefix == "" {
		kindFlagName = "Kind"
	} else {
		kindFlagName = fmt.Sprintf("%v.Kind", cmdPrefix)
	}

	var kindFlagDefault string

	_ = cmd.PersistentFlags().String(kindFlagName, kindFlagDefault, kindDescription)

	return nil
}

func registerGenericResourcesItems0NamedResourceSpecValue(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	valueDescription := ``

	var valueFlagName string
	if cmdPrefix == "" {
		valueFlagName = "Value"
	} else {
		valueFlagName = fmt.Sprintf("%v.Value", cmdPrefix)
	}

	var valueFlagDefault string

	_ = cmd.PersistentFlags().String(valueFlagName, valueFlagDefault, valueDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelGenericResourcesItems0NamedResourceSpecFlags(depth int, m *models.GenericResourcesItems0NamedResourceSpec, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, kindAdded := retrieveGenericResourcesItems0NamedResourceSpecKindFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || kindAdded

	err, valueAdded := retrieveGenericResourcesItems0NamedResourceSpecValueFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || valueAdded

	return nil, retAdded
}

func retrieveGenericResourcesItems0NamedResourceSpecKindFlags(depth int, m *models.GenericResourcesItems0NamedResourceSpec, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	kindFlagName := fmt.Sprintf("%v.Kind", cmdPrefix)
	if cmd.Flags().Changed(kindFlagName) {

		var kindFlagName string
		if cmdPrefix == "" {
			kindFlagName = "Kind"
		} else {
			kindFlagName = fmt.Sprintf("%v.Kind", cmdPrefix)
		}

		kindFlagValue, err := cmd.Flags().GetString(kindFlagName)
		if err != nil {
			return err, false
		}
		m.Kind = kindFlagValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveGenericResourcesItems0NamedResourceSpecValueFlags(depth int, m *models.GenericResourcesItems0NamedResourceSpec, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	valueFlagName := fmt.Sprintf("%v.Value", cmdPrefix)
	if cmd.Flags().Changed(valueFlagName) {

		var valueFlagName string
		if cmdPrefix == "" {
			valueFlagName = "Value"
		} else {
			valueFlagName = fmt.Sprintf("%v.Value", cmdPrefix)
		}

		valueFlagValue, err := cmd.Flags().GetString(valueFlagName)
		if err != nil {
			return err, false
		}
		m.Value = valueFlagValue

		retAdded = true
	}

	return nil, retAdded
}
