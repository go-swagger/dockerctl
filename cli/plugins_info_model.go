// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/dockerctl/models"
	"github.com/spf13/cobra"
)

// Schema cli for PluginsInfo

// register flags to command
func registerModelPluginsInfoFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPluginsInfoAuthorization(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPluginsInfoLog(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPluginsInfoNetwork(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPluginsInfoVolume(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPluginsInfoAuthorization(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Authorization []string array type is not supported by go-swagger cli yet

	return nil
}

func registerPluginsInfoLog(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Log []string array type is not supported by go-swagger cli yet

	return nil
}

func registerPluginsInfoNetwork(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Network []string array type is not supported by go-swagger cli yet

	return nil
}

func registerPluginsInfoVolume(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: Volume []string array type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPluginsInfoFlags(depth int, m *models.PluginsInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, authorizationAdded := retrievePluginsInfoAuthorizationFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || authorizationAdded

	err, logAdded := retrievePluginsInfoLogFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || logAdded

	err, networkAdded := retrievePluginsInfoNetworkFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || networkAdded

	err, volumeAdded := retrievePluginsInfoVolumeFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || volumeAdded

	return nil, retAdded
}

func retrievePluginsInfoAuthorizationFlags(depth int, m *models.PluginsInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	authorizationFlagName := fmt.Sprintf("%v.Authorization", cmdPrefix)
	if cmd.Flags().Changed(authorizationFlagName) {
		// warning: Authorization array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePluginsInfoLogFlags(depth int, m *models.PluginsInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	logFlagName := fmt.Sprintf("%v.Log", cmdPrefix)
	if cmd.Flags().Changed(logFlagName) {
		// warning: Log array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePluginsInfoNetworkFlags(depth int, m *models.PluginsInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	networkFlagName := fmt.Sprintf("%v.Network", cmdPrefix)
	if cmd.Flags().Changed(networkFlagName) {
		// warning: Network array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePluginsInfoVolumeFlags(depth int, m *models.PluginsInfo, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	volumeFlagName := fmt.Sprintf("%v.Volume", cmdPrefix)
	if cmd.Flags().Changed(volumeFlagName) {
		// warning: Volume array type []string is not supported by go-swagger cli yet
	}

	return nil, retAdded
}
