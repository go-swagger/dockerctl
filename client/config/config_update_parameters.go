// Code generated by go-swagger; DO NOT EDIT.

package config

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-swagger/dockerctl/models"
)

// NewConfigUpdateParams creates a new ConfigUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewConfigUpdateParams() *ConfigUpdateParams {
	return &ConfigUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewConfigUpdateParamsWithTimeout creates a new ConfigUpdateParams object
// with the ability to set a timeout on a request.
func NewConfigUpdateParamsWithTimeout(timeout time.Duration) *ConfigUpdateParams {
	return &ConfigUpdateParams{
		timeout: timeout,
	}
}

// NewConfigUpdateParamsWithContext creates a new ConfigUpdateParams object
// with the ability to set a context for a request.
func NewConfigUpdateParamsWithContext(ctx context.Context) *ConfigUpdateParams {
	return &ConfigUpdateParams{
		Context: ctx,
	}
}

// NewConfigUpdateParamsWithHTTPClient creates a new ConfigUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewConfigUpdateParamsWithHTTPClient(client *http.Client) *ConfigUpdateParams {
	return &ConfigUpdateParams{
		HTTPClient: client,
	}
}

/* ConfigUpdateParams contains all the parameters to send to the API endpoint
   for the config update operation.

   Typically these are written to a http.Request.
*/
type ConfigUpdateParams struct {

	/* Body.

	   The spec of the config to update. Currently, only the Labels field can be updated. All other fields must remain unchanged from the [ConfigInspect endpoint](#operation/ConfigInspect) response values.
	*/
	Body *models.ConfigSpec

	/* ID.

	   The ID or name of the config
	*/
	ID string

	/* Version.

	   The version number of the config object being updated. This is required to avoid conflicting writes.

	   Format: int64
	*/
	Version int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the config update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConfigUpdateParams) WithDefaults() *ConfigUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the config update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConfigUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the config update params
func (o *ConfigUpdateParams) WithTimeout(timeout time.Duration) *ConfigUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the config update params
func (o *ConfigUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the config update params
func (o *ConfigUpdateParams) WithContext(ctx context.Context) *ConfigUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the config update params
func (o *ConfigUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the config update params
func (o *ConfigUpdateParams) WithHTTPClient(client *http.Client) *ConfigUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the config update params
func (o *ConfigUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the config update params
func (o *ConfigUpdateParams) WithBody(body *models.ConfigSpec) *ConfigUpdateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the config update params
func (o *ConfigUpdateParams) SetBody(body *models.ConfigSpec) {
	o.Body = body
}

// WithID adds the id to the config update params
func (o *ConfigUpdateParams) WithID(id string) *ConfigUpdateParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the config update params
func (o *ConfigUpdateParams) SetID(id string) {
	o.ID = id
}

// WithVersion adds the version to the config update params
func (o *ConfigUpdateParams) WithVersion(version int64) *ConfigUpdateParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the config update params
func (o *ConfigUpdateParams) SetVersion(version int64) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *ConfigUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// query param version
	qrVersion := o.Version
	qVersion := swag.FormatInt64(qrVersion)
	if qVersion != "" {

		if err := r.SetQueryParam("version", qVersion); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
