// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"io"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPluginCreateParams creates a new PluginCreateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPluginCreateParams() *PluginCreateParams {
	return &PluginCreateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPluginCreateParamsWithTimeout creates a new PluginCreateParams object
// with the ability to set a timeout on a request.
func NewPluginCreateParamsWithTimeout(timeout time.Duration) *PluginCreateParams {
	return &PluginCreateParams{
		timeout: timeout,
	}
}

// NewPluginCreateParamsWithContext creates a new PluginCreateParams object
// with the ability to set a context for a request.
func NewPluginCreateParamsWithContext(ctx context.Context) *PluginCreateParams {
	return &PluginCreateParams{
		Context: ctx,
	}
}

// NewPluginCreateParamsWithHTTPClient creates a new PluginCreateParams object
// with the ability to set a custom HTTPClient for a request.
func NewPluginCreateParamsWithHTTPClient(client *http.Client) *PluginCreateParams {
	return &PluginCreateParams{
		HTTPClient: client,
	}
}

/* PluginCreateParams contains all the parameters to send to the API endpoint
   for the plugin create operation.

   Typically these are written to a http.Request.
*/
type PluginCreateParams struct {

	/* Name.

	   The name of the plugin. The `:latest` tag is optional, and is the default if omitted.
	*/
	Name string

	/* TarContext.

	   Path to tar containing plugin rootfs and manifest

	   Format: binary
	*/
	TarContext io.ReadCloser

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the plugin create params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PluginCreateParams) WithDefaults() *PluginCreateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the plugin create params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PluginCreateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the plugin create params
func (o *PluginCreateParams) WithTimeout(timeout time.Duration) *PluginCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the plugin create params
func (o *PluginCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the plugin create params
func (o *PluginCreateParams) WithContext(ctx context.Context) *PluginCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the plugin create params
func (o *PluginCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the plugin create params
func (o *PluginCreateParams) WithHTTPClient(client *http.Client) *PluginCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the plugin create params
func (o *PluginCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the plugin create params
func (o *PluginCreateParams) WithName(name string) *PluginCreateParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the plugin create params
func (o *PluginCreateParams) SetName(name string) {
	o.Name = name
}

// WithTarContext adds the tarContext to the plugin create params
func (o *PluginCreateParams) WithTarContext(tarContext io.ReadCloser) *PluginCreateParams {
	o.SetTarContext(tarContext)
	return o
}

// SetTarContext adds the tarContext to the plugin create params
func (o *PluginCreateParams) SetTarContext(tarContext io.ReadCloser) {
	o.TarContext = tarContext
}

// WriteToRequest writes these params to a swagger request
func (o *PluginCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param name
	qrName := o.Name
	qName := qrName
	if qName != "" {

		if err := r.SetQueryParam("name", qName); err != nil {
			return err
		}
	}
	if o.TarContext != nil {
		if err := r.SetBodyParam(o.TarContext); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
