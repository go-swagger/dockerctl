// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/go-openapi/dockerctl/models"
)

// TaskListReader is a Reader for the TaskList structure.
type TaskListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TaskListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTaskListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewTaskListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewTaskListServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTaskListOK creates a TaskListOK with default headers values
func NewTaskListOK() *TaskListOK {
	return &TaskListOK{}
}

/* TaskListOK describes a response with status code 200, with default header values.

no error
*/
type TaskListOK struct {
	Payload []*models.Task
}

func (o *TaskListOK) Error() string {
	return fmt.Sprintf("[GET /tasks][%d] taskListOK  %+v", 200, o.Payload)
}
func (o *TaskListOK) GetPayload() []*models.Task {
	return o.Payload
}

func (o *TaskListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaskListInternalServerError creates a TaskListInternalServerError with default headers values
func NewTaskListInternalServerError() *TaskListInternalServerError {
	return &TaskListInternalServerError{}
}

/* TaskListInternalServerError describes a response with status code 500, with default header values.

server error
*/
type TaskListInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *TaskListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tasks][%d] taskListInternalServerError  %+v", 500, o.Payload)
}
func (o *TaskListInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *TaskListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaskListServiceUnavailable creates a TaskListServiceUnavailable with default headers values
func NewTaskListServiceUnavailable() *TaskListServiceUnavailable {
	return &TaskListServiceUnavailable{}
}

/* TaskListServiceUnavailable describes a response with status code 503, with default header values.

node is not part of a swarm
*/
type TaskListServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *TaskListServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /tasks][%d] taskListServiceUnavailable  %+v", 503, o.Payload)
}
func (o *TaskListServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *TaskListServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
